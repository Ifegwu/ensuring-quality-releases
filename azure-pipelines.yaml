name: Azure Pipelines
variables:
  python.version: "3.7.6"

stages:
  - stage: Build
    jobs:
      - job: build_artifacts
        displayName: BuildArtifacts
        pool: 
          vmImage: ubuntu-latest
        variables: 
          myPubKey: 'test'
          fingerPrint: 'test'
        steps:
          #Needed for Terraform VM deployment
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: $(fingerPrint)
              sshPublicKey: $(myPubkey)
              sshKeySecureFile: 'id_rsa'
              
          - task: ArchiveFiles@2
            displayName: ArchiveFakeRestAPI
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip"
          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
            displayName: "Upload Package"
            artifact: drop-fakerestapi
  - stage: Deploy
    jobs:
      - deployment: deploy_fakeRestAPI
        displayName: DeployFakeRestAPI
        pool: 
          vmImage: ubuntu-latest
        environment: 'TEST'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "DeployAzureWebApp"
                  inputs:
                    azureSubscription: 'quality-app'
                    appName: 'saasApp3-AppService'
                    appType: webApp
                    package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
      - deployment: deploy_to_vm
        displayName: DeployAppToVM
        environment:
          name:  'TEST'
          resourceType: VirtualMachine
          tags: project-3
        strategy:
          runOnce:
            deploy:
              steps:
              - task: Bash@3
                inputs:
                  targetType: 'inline'
                  script: |
                    #! /bin/bash

                    sudo apt-get upgrade -y
                    sudo apt-get install python3-pip -y
                    sudo apt-get install unzip -y
                    sudo apt-get install -y chromium-browser
                    pip3 install selenium
                    export PATH=$PATH:home/akwari
